{"version":3,"sources":["webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VCheckbox/VCheckbox.ts","webpack:///../../../src/components/VCard/VCard.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["name","directives","ripple","props","type","Boolean","default","methods","genRipple","data","this","value","center","$createElement","valueComparator","indeterminate","indeterminateIcon","offIcon","onIcon","inputIndeterminate","computed","classes","computedIcon","validationState","isDisabled","hasError","hasColor","watch","isActive","genCheckbox","checkboxAttrs","staticClass","setTextColor","dense","dark","light","genInput","toString","genDefaultSlot","flat","hover","img","link","loaderHeight","Number","raised","styles","style","genProgress","render","key","h","tag","setBackgroundColor","$slots","e","model","prop","event","id","inputValue","falseValue","trueValue","multiple","label","String","lazyValue","computedColor","isDark","isMultiple","Array","input","item","undefined","isDirty","rippleState","genLabel","click","prevent","attrs","Object","disabled","role","domProps","checked","on","blur","change","focus","keydown","ref","onBlur","onClick","onChange","length","onFocus","onKeydown"],"mappings":"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","file":"js/chunk-b48e6892.e64fcacd.js","sourcesContent":["// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}